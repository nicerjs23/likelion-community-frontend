// Ïª§ÎÆ§ÎãàÌã∞ Î©îÏù∏ ÌéòÏù¥ÏßÄ
import * as S from './CommuMainPage.styled'
import { MainHeader } from '@components/MainHeader'
import { Footer } from '@components/Footer'
import { Link } from 'react-router-dom'
import { useState, useEffect } from 'react'
import axiosInstance from '@apis/axiosInstance'

export const CommuMainPage = () => {
    const [posts, setPosts] = useState([]);

    // Í≤åÏãúÌåêÎßàÎã§ Í∞ÄÏû• ÏµúÍ∑ºÏóê ÏûëÏÑ±Îêú Í∏ÄÏùÑ Í∞ÄÏ†∏Ïò®Îã§
    const fetchLatestPosts = async () => {
        try{
            const response = await axiosInstance.get('/post/latest-main-board/');
            console.log('ÏµúÍ∑º Í≤åÏãúÍ∏Ä :', response.data);
            setPosts(Array.isArray(response.data) ? response.data : [response.data]);
        } catch(error) {
            console.log('ÏµúÍ∑º Í≤åÏãúÍ∏Ä ÏóêÎü¨ :',error)
        }
    }

    useEffect(() => {
        fetchLatestPosts();
    }, [])

    const getLink = (boardTitle) => {
        switch(boardTitle) {
            case "ÏûêÏú†Í≤åÏãúÌåê":
                return "defaultBoard";
            case "ÌîÑÎ°†Ìä∏ÏóîÎìú Í≤åÏãúÌåê":
                return "feBoard";
            case "Î∞±ÏóîÎìú Í≤åÏãúÌåê":
                return "beBoard";
            case "Í∏∞Ìöç/ÎîîÏûêÏù∏ Í≤åÏãúÌåê":
                return "pmBoard";
            case "ÏïÑÍ∏∞ÏÇ¨ÏûêÍ≤åÏãúÌåê":
                return "lionBoard";
            case "Ïù¥Î≤§Ìä∏/Í≥µÏßÄ Í≤åÏãúÌåê":
                return "notiBoard";
            case "Ï∞∏Ïó¨Í≤åÏãúÌåê":
                return "joinBoard";
            default:
                return "defaultBoard";
        }
    }

    const getBoardTitle = (boardTitle) => {
        switch(boardTitle) {
            case "ÏûêÏú†Í≤åÏãúÌåê":
                return "üí¨ ÏûêÏú†Í≤åÏãúÌåê";
            case "ÌîÑÎ°†Ìä∏ÏóîÎìú Í≤åÏãúÌåê":
                return "üö• ÌîÑÎ°†Ìä∏ÏóîÎìú Í≤åÏãúÌåê";
            case "Î∞±ÏóîÎìú Í≤åÏãúÌåê":
                return "üö• Î∞±ÏóîÎìú Í≤åÏãúÌåê";
            case "Í∏∞Ìöç/ÎîîÏûêÏù∏ Í≤åÏãúÌåê":
                return "üö• Í∏∞Ìöç/ÎîîÏûêÏù∏ Í≤åÏãúÌåê";
            case "ÏïÑÍ∏∞ÏÇ¨ÏûêÍ≤åÏãúÌåê":
                return "ü¶Å ÏïÑÍ∏∞ÏÇ¨ÏûêÍ≤åÏãúÌåê";
            case "Ïù¥Î≤§Ìä∏/Í≥µÏßÄ Í≤åÏãúÌåê":
                return "üì¢ Ïù¥Î≤§Ìä∏/Í≥µÏßÄÍ≤åÏãúÌåê";
            case "Ï∞∏Ïó¨Í≤åÏãúÌåê":
                return "‚úã Ï∞∏Ïó¨Í≤åÏãúÌåê";
            default:
                return "üí¨ ÏûêÏú†Í≤åÏãúÌåê";
        }
    }

    // Ïù¥Î≤§Ìä∏ Í≥µÏßÄ Í≤åÏãúÌåêÏùò Í∞ÄÏû• ÏµúÏã† Í≤åÏãúÍ∏Ä
    const [noti, setNoti] = useState('');
    const fetchLatestNoti = async () => {
        try{
            const response = await axiosInstance.get('/post/latest-main-notice/');
            console.log('ÏµúÍ∑º Í≤åÏãúÍ∏Ä :', response.data);
            setNoti(response.data);
        } catch(error) {
            console.log('ÏµúÍ∑º Í≤åÏãúÍ∏Ä ÏóêÎü¨ :',error)
        }
    }

    useEffect(() => {
        fetchLatestNoti();
    }, [])

    return (
        <S.Wrapper>
            <MainHeader title='EVERION'/>
            <S.Content>
                <S.Title>Í≤åÏãúÌåê</S.Title>
                <S.Posts>
                    <>
                    {posts.map((post, id) => {
                        return(
                        <S.Post>
                            <S.Top>
                                <S.Name>{getBoardTitle(post.board_title)}</S.Name>
                                <Link to={`/${getLink(post.board_title)}`}>
                                    <S.More>ÎçîÎ≥¥Í∏∞</S.More>
                                </Link>
                            </S.Top>
                            <S.Context>{post.body}</S.Context>
                        </S.Post>)
                    })}
                    </>
                    <S.Post>
                        <S.Top>
                            <S.Name>üì¢ Ïù¥Î≤§Ìä∏/Í≥µÏßÄÍ≤åÏãúÌåê</S.Name>
                            <Link to={`/notiBoard`}>
                                <S.More>ÎçîÎ≥¥Í∏∞</S.More>
                            </Link>
                        </S.Top>
                        <S.Context>{noti.body}</S.Context>
                    </S.Post>
                </S.Posts>
            </S.Content>
            <Footer />
        </S.Wrapper>
    )
}

export default CommuMainPage
